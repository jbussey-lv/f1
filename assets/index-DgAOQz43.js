(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const h of s.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}})();function m(a){return a&&a.__esModule&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a}var y={exports:{}},x;function M(){return x||(x=1,(function(a,i){a.exports=e;function e(t,r){if(!(this instanceof e))return new e(t,r);this.x=t||0,this.y=r||0}e.fromArray=function(t){return new e(t[0]||0,t[1]||0)},e.fromObject=function(t){return new e(t.x||0,t.y||0)},e.prototype.addX=function(t){return this.x+=t.x,this},e.prototype.addY=function(t){return this.y+=t.y,this},e.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this},e.prototype.addScalar=function(t){return this.x+=t,this.y+=t,this},e.prototype.addScalarX=function(t){return this.x+=t,this},e.prototype.addScalarY=function(t){return this.y+=t,this},e.prototype.subtractX=function(t){return this.x-=t.x,this},e.prototype.subtractY=function(t){return this.y-=t.y,this},e.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this},e.prototype.subtractScalar=function(t){return this.x-=t,this.y-=t,this},e.prototype.subtractScalarX=function(t){return this.x-=t,this},e.prototype.subtractScalarY=function(t){return this.y-=t,this},e.prototype.divideX=function(t){return this.x/=t.x,this},e.prototype.divideY=function(t){return this.y/=t.y,this},e.prototype.divide=function(t){return this.x/=t.x,this.y/=t.y,this},e.prototype.divideScalar=function(t){return t!==0?(this.x/=t,this.y/=t):(this.x=0,this.y=0),this},e.prototype.divideScalarX=function(t){return t!==0?this.x/=t:this.x=0,this},e.prototype.divideScalarY=function(t){return t!==0?this.y/=t:this.y=0,this},e.prototype.invertX=function(){return this.x*=-1,this},e.prototype.invertY=function(){return this.y*=-1,this},e.prototype.invert=function(){return this.invertX(),this.invertY(),this},e.prototype.multiplyX=function(t){return this.x*=t.x,this},e.prototype.multiplyY=function(t){return this.y*=t.y,this},e.prototype.multiply=function(t){return this.x*=t.x,this.y*=t.y,this},e.prototype.multiplyScalar=function(t){return this.x*=t,this.y*=t,this},e.prototype.multiplyScalarX=function(t){return this.x*=t,this},e.prototype.multiplyScalarY=function(t){return this.y*=t,this},e.prototype.normalize=function(){var t=this.length();return t===0?(this.x=1,this.y=0):this.divide(e(t,t)),this},e.prototype.norm=e.prototype.normalize,e.prototype.limit=function(t,r){return Math.abs(this.x)>t&&(this.x*=r),Math.abs(this.y)>t&&(this.y*=r),this},e.prototype.randomize=function(t,r){return this.randomizeX(t,r),this.randomizeY(t,r),this},e.prototype.randomizeX=function(t,r){var c=Math.min(t.x,r.x),p=Math.max(t.x,r.x);return this.x=o(c,p),this},e.prototype.randomizeY=function(t,r){var c=Math.min(t.y,r.y),p=Math.max(t.y,r.y);return this.y=o(c,p),this},e.prototype.randomizeAny=function(t,r){return Math.round(Math.random())?this.randomizeX(t,r):this.randomizeY(t,r),this},e.prototype.unfloat=function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},e.prototype.toFixed=function(t){return typeof t>"u"&&(t=8),this.x=this.x.toFixed(t),this.y=this.y.toFixed(t),this},e.prototype.mixX=function(t,r){return typeof r>"u"&&(r=.5),this.x=(1-r)*this.x+r*t.x,this},e.prototype.mixY=function(t,r){return typeof r>"u"&&(r=.5),this.y=(1-r)*this.y+r*t.y,this},e.prototype.mix=function(t,r){return this.mixX(t,r),this.mixY(t,r),this},e.prototype.clone=function(){return new e(this.x,this.y)},e.prototype.copyX=function(t){return this.x=t.x,this},e.prototype.copyY=function(t){return this.y=t.y,this},e.prototype.copy=function(t){return this.copyX(t),this.copyY(t),this},e.prototype.zero=function(){return this.x=this.y=0,this},e.prototype.dot=function(t){return this.x*t.x+this.y*t.y},e.prototype.cross=function(t){return this.x*t.y-this.y*t.x},e.prototype.projectOnto=function(t){var r=(this.x*t.x+this.y*t.y)/(t.x*t.x+t.y*t.y);return this.x=r*t.x,this.y=r*t.y,this},e.prototype.horizontalAngle=function(){return Math.atan2(this.y,this.x)},e.prototype.horizontalAngleDeg=function(){return s(this.horizontalAngle())},e.prototype.verticalAngle=function(){return Math.atan2(this.x,this.y)},e.prototype.verticalAngleDeg=function(){return s(this.verticalAngle())},e.prototype.angle=e.prototype.horizontalAngle,e.prototype.angleDeg=e.prototype.horizontalAngleDeg,e.prototype.direction=e.prototype.horizontalAngle,e.prototype.rotate=function(t){var r=this.x*Math.cos(t)-this.y*Math.sin(t),c=this.x*Math.sin(t)+this.y*Math.cos(t);return this.x=r,this.y=c,this},e.prototype.rotateDeg=function(t){return t=h(t),this.rotate(t)},e.prototype.rotateTo=function(t){return this.rotate(t-this.angle())},e.prototype.rotateToDeg=function(t){return t=h(t),this.rotateTo(t)},e.prototype.rotateBy=function(t){var r=this.angle()+t;return this.rotate(r)},e.prototype.rotateByDeg=function(t){return t=h(t),this.rotateBy(t)},e.prototype.distanceX=function(t){return this.x-t.x},e.prototype.absDistanceX=function(t){return Math.abs(this.distanceX(t))},e.prototype.distanceY=function(t){return this.y-t.y},e.prototype.absDistanceY=function(t){return Math.abs(this.distanceY(t))},e.prototype.distance=function(t){return Math.sqrt(this.distanceSq(t))},e.prototype.distanceSq=function(t){var r=this.distanceX(t),c=this.distanceY(t);return r*r+c*c},e.prototype.length=function(){return Math.sqrt(this.lengthSq())},e.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y},e.prototype.magnitude=e.prototype.length,e.prototype.isZero=function(){return this.x===0&&this.y===0},e.prototype.isEqualTo=function(t){return this.x===t.x&&this.y===t.y},e.prototype.toString=function(){return"x:"+this.x+", y:"+this.y},e.prototype.toArray=function(){return[this.x,this.y]},e.prototype.toObject=function(){return{x:this.x,y:this.y}};var n=180/Math.PI;function o(t,r){return Math.floor(Math.random()*(r-t+1)+t)}function s(t){return t*n}function h(t){return t/n}})(y)),y.exports}var w=M();const u=m(w);function f(a,i,e){return Math.max(i,Math.min(e,a))}const d="http://www.w3.org/2000/svg";class A{pixelsPerMeter=6;meterCenter=new u(0,0);world;svg;constructor(i,e){this.world=i,this.svg=e,this.animate()}get pixelCenterCoords(){return new u(this.widthInPixels/2,this.heightInPixels/2)}animate(){this.draw(),requestAnimationFrame(()=>this.animate())}draw(){this.svg.innerHTML="",this.drawAxis(),this.world.cars.forEach(i=>{this.drawCar(i)})}drawRectangleInMeters(i,e,n,o,s){const h=this.meterCoordsToPixelCoords(i),t=e.clone().multiplyScalar(this.pixelsPerMeter),r=n.clone().multiplyScalar(this.pixelsPerMeter);this.drawRectangleInPixels(h,r,t,o,s),this.drawDotInPixels(h,3,"red"),this.addLabelAtMeterCoords(i,`(${i.x.toFixed(1)}, ${i.y.toFixed(1)}) angle: ${o.toFixed(0)}Â°`,"red")}drawDotInPixels(i,e,n){const o=document.createElementNS(d,"circle");o.setAttribute("cx",i.x.toString()),o.setAttribute("cy",i.y.toString()),o.setAttribute("r",e.toString()),o.setAttribute("fill",n),this.svg.appendChild(o)}drawRectangleInPixels(i,e,n,o,s){const h=`${-1*o} ${i.x} ${i.y}`,t=`${-1*e.x} ${-1*e.y}`,r=document.createElementNS(d,"rect");r.setAttribute("x",i.x.toString()),r.setAttribute("y",i.y.toString()),r.setAttribute("width",n.x.toString()),r.setAttribute("height",n.y.toString()),r.setAttribute("fill",s),r.setAttribute("transform",`rotate(${h}) translate(${t})`),this.svg.appendChild(r)}get widthInPixels(){return this.svg.clientWidth}get heightInPixels(){return this.svg.clientHeight}get widthInMeters(){return this.widthInPixels/this.pixelsPerMeter}get heightInMeters(){return this.heightInPixels/this.pixelsPerMeter}meterCoordsToPixelCoords(i){const e=this.pixelCenterCoords,n=e.x+(i.x-this.meterCenter.x)*this.pixelsPerMeter,o=e.y-(i.y-this.meterCenter.y)*this.pixelsPerMeter;return new u(n,o)}pixelCoordsToMeterCoords(i){return new u((i.x-this.widthInPixels/2)/this.pixelsPerMeter+this.meterCenter.x,(i.y-this.heightInPixels/2)/this.pixelsPerMeter+this.meterCenter.y)}get minXInMeters(){return this.meterCenter.x-this.widthInMeters/2}get maxXInMeters(){return this.meterCenter.x+this.widthInMeters/2}get minYInMeters(){return this.meterCenter.y-this.heightInMeters/2}get maxYInMeters(){return this.meterCenter.y+this.heightInMeters/2}addLineViaMeterCoords(i,e,n="black",o=1){const s=this.meterCoordsToPixelCoords(i),h=this.meterCoordsToPixelCoords(e);this.addLineViaPixelCoords(s,h,n,o)}addLineViaPixelCoords(i,e,n="black",o=1){const s=document.createElementNS(d,"line");s.setAttribute("x1",i.x.toString()),s.setAttribute("y1",i.y.toString()),s.setAttribute("x2",e.x.toString()),s.setAttribute("y2",e.y.toString()),s.setAttribute("stroke",n),s.setAttribute("stroke-width",o.toString()),this.svg.appendChild(s)}addHorizontalLineAtYMeters(i,e="black",n=1){const o=new u(this.minXInMeters,i),s=new u(this.maxXInMeters,i);this.addLineViaMeterCoords(o,s,e,n)}addVerticalLineAtXMeters(i,e="black",n=1){const o=new u(i,this.minYInMeters),s=new u(i,this.maxYInMeters);this.addLineViaMeterCoords(o,s,e,n)}addLabelAtMeterCoords(i,e,n,o=!1,s=!1){const h=this.meterCoordsToPixelCoords(i);this.addLabelAtPixelCoords(h,e,n,o,s)}addLabelAtPixelCoords(i,e,n,o=!1,s=!1){const h=document.createElementNS(d,"text");h.setAttribute("x",(i.x+2).toString()),h.setAttribute("y",(i.y-2).toString()),h.setAttribute("font-size","12"),h.setAttribute("fill",n),h.textContent=e,this.svg.appendChild(h);const t=h.getBBox();if(o){const r=f(i.x+2,0,this.widthInPixels-t.width);h.setAttribute("x",r.toString())}if(s){const r=f(i.y-2,0+t.height,this.heightInPixels);h.setAttribute("y",r.toString())}}drawAxis(){const i=10**Math.floor(Math.log10(this.heightInMeters-1)),e=10**Math.floor(Math.log10(this.widthInMeters-1)),n=Math.min(i,e),o=(Math.ceil(this.minXInMeters/n)-1)*n,s=(Math.floor(this.maxXInMeters/n)+1)*n,h=(Math.ceil(this.minYInMeters/n)-1)*n,t=(Math.floor(this.maxYInMeters/n)+1)*n;for(let r=h;r<=t;r+=n)this.addYTick(r);for(let r=o;r<=s;r+=n)this.addXTick(r)}addXTick(i){const e=i===0?"black":"grey",n=i===0?1:.5;this.addVerticalLineAtXMeters(i,e,n),this.addLabelAtMeterCoords(new u(i,0),i.toFixed(2),"black",!1,!0)}addYTick(i){const e=i===0?"black":"grey",n=i===0?1:.5;this.addHorizontalLineAtYMeters(i,e,n),this.addLabelAtMeterCoords(new u(0,i),i.toFixed(2),e,!1,!0)}drawCar(i){this.drawRectangleInMeters(i.position,i.dimensions,i.com,i.angleInDegrees,i.color)}}class b{position=new u(20,0);velocity=new u(0,0);length=4;width=2;_angle=90*Math.PI/180;angulerVelocity=25*Math.PI/180;dimensions=new u(10,5);mass=1500;com=new u(2/3*this.dimensions.x,this.dimensions.y/2);moment=1/12*this.mass*(this.length**2+this.width**2);color="blue";id=crypto.randomUUID();wheels=[];update(i){let e=new u(0,0),n=0;for(const o of this.wheels){const{force:s,torque:h}=o.getForceAndTorque(this);e.add(s),n+=h}this.updatePosition(e,i),this.updateAngle(n,i)}updatePosition(i,e){const n=i.divideScalar(this.mass);this.velocity.add(n.multiplyScalar(e)),this.position.add(this.velocity.multiplyScalar(e))}updateAngle(i,e){const n=i/this.moment;this.angulerVelocity+=n*e,this.angle+=this.angulerVelocity*e}get angleInDegrees(){return this.angle*180/Math.PI}get angle(){return this._angle}set angle(i){this._angle=i%(2*Math.PI)}}class C{time=0;timestepSeconds=1/120;timestepMilliseconds=this.timestepSeconds*1e3;cars;constructor(i=[]){this.cars=i,setInterval(()=>this.run(),this.timestepMilliseconds)}run(){this.time+=this.timestepSeconds,this.cars.forEach(i=>{i.angle+=i.angulerVelocity*this.timestepSeconds,i.position=new u(20*Math.sin(i.angle),-20*Math.cos(i.angle))})}}document.addEventListener("DOMContentLoaded",()=>{const a=[new b],i=new C(a),e=document.getElementById("svgCanvas");if(!e)throw new Error("SVG canvas not found");new A(i,e).draw()});let l;window.addEventListener("gamepadconnected",a=>{const i=a.gamepad;l=i.index,console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",i.index,i.id,i.buttons.length,i.axes.length);const e=document.getElementById("logOutput");e&&(e.textContent="Controller connected: "+i.id+`
`),g()});window.addEventListener("gamepaddisconnected",()=>{l=void 0,console.log("Gamepad disconnected.");const a=document.getElementById("logOutput");a&&(a.textContent=`Controller disconnected.
`)});function g(){if(l!==void 0){const a=navigator.getGamepads()[l];if(!a){console.log("Gamepad not found.");return}a.buttons.forEach((i,e)=>{if(i.pressed){const n=document.getElementById("logOutput");n&&(n.textContent=`Button ${e} pressed. Value: ${i.value}
`)}}),a.axes.forEach((i,e)=>{if(Math.abs(i)>.1){const n=document.getElementById("logOutput");n&&(n.textContent=`Axis ${e} moved. Value: ${i}
`)}})}requestAnimationFrame(g)}
